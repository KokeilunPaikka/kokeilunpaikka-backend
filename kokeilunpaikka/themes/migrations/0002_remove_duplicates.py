# Generated by Django 2.2.5 on 2020-04-17 10:58

from django.db import migrations, models
from django.conf import settings
import django.db.models.deletion
import parler.models


def forwards_func(apps, schema_editor):
    Theme = apps.get_model('themes', 'Theme')
    ThemeTranslation = apps.get_model('themes', 'ThemeTranslation')
    theme_translations = ThemeTranslation.objects.all()
    for tt in theme_translations:
        try:
            duplicates = theme_translations.filter(name__iexact=tt.name).exclude(master__id=tt.master.id)
        except Exception as e:
            if 'does not exist' in str(e):
                continue
        if duplicates.count() > 0:
            for d in duplicates:
                count = 0
                new_count = 0
                for expc in d.master.experimentchallenge_set.all():
                    count += expc.themes.distinct().count()
                    expc.themes.remove(d.master)
                    expc.themes.add(tt.master)
                    expc.save()
                    new_count += expc.themes.distinct().count()
                for exp in d.master.experiment_set.all():
                    count += exp.themes.distinct().count()
                    exp.themes.remove(d.master)
                    exp.themes.add(tt.master)
                    exp.save()
                    new_count += exp.themes.distinct().count()
                for lib in d.master.libraryitem_set.all():
                    count += lib.themes.distinct().count()
                    lib.themes.remove(d.master)
                    lib.themes.add(tt.master)
                    lib.save()
                    new_count += lib.themes.distinct().count()
                for usr in d.master.userprofile_set.all():
                    count += usr.interested_in_themes.distinct().count()
                    usr.interested_in_themes.remove(d.master)
                    usr.interested_in_themes.add(tt.master)
                    usr.save()
                    new_count += usr.interested_in_themes.distinct().count()
                d.delete()
                d.master.delete()
                theme_translations = ThemeTranslation.objects.all()

    for tt in theme_translations:
        tt.name = tt.name.capitalize()
        tt.save()

class Migration(migrations.Migration):

    dependencies = [
        ('themes', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(forwards_func)
    ]
