# Generated by Django 2.2.5 on 2020-05-12 12:32

from django.db import migrations, models
import django.db.models.deletion
import parler.models

DEFAULT_TEXTS = {
    'front_page_header': {
        'en': 'Do you want to develop your solutions through agile experiments?',
        'sv': 'Vill du ta fram lösningar genom smidig försöksverksamhet?',
        'fi': 'Haluatko kehittää ratkaisuja ketterästi kokeillen?'
    },
    'front_page_ingress': {
        'en': 'By using Kokeilun paikka, you can roll up your sleeves and put your ideas to the test. You can start an experiment, apply for funding or share your lessons learned with others',
        'sv': 'Kavla upp ärmarna och testa din idé i praktiken på Plats för försök. Du kan komma med idéer till försök, ansöka om finansiering och dela med dig av lärdomar du fått.',
        'fi': 'Kokeilun paikan avulla voit kääriä hihat ja testata ideaasi käytännössä. Voit ideoida kokeilun, hakea rahoitusta ja levittää opit avoimesti kaikkien käyttöön'
    },
    'stages-header': {
        'en': 'Experiment stages',
        'sv': 'Försökets etapper',
        'fi': 'Kokeilun vaiheet'
    },
    'stage-1-header': {
        'en': 'Idea for an experiment',
        'sv': 'Försöksidé',
        'fi': 'Kokeilun idea'
    },
    'stage-2-header': {
        'en': 'Agile experiment',
        'sv': 'Smidig försöksverksamhet',
        'fi': 'Ketterä kokeilu'
    },
    'stage-3-header': {
        'en': 'Lessons learned',
        'sv': 'Lärdomar av försöket',
        'fi': 'Kokeilun oppi'
    },
    'stage-1-text': {
        'en': 'It all starts from an idea. Start an experiment by writing down your idea. What problem do you want to solve? Why, how and what?',
        'sv': 'Allt börjar med en idé. Inled försöksprocessen genom att redogöra för din idé. Vilket problem vill du lösa, och varför och hur vill du göra det?',
        'fi': 'Kaikki lähtee ideasta. Aloita kokeilu kirjaamalla ideasi. Minkä ongelman haluat ratkaista? Miksi, miten ja mitä?'
    },
    'stage-2-text': {
        'en': 'Once you have defined your idea and possibly received funding, it’s time to experiment. You can also share your experiences along the way.',
        'sv': 'Efter att du har utformat din idé och fått finansiering för att förverkliga den, är det dags att inleda försöket. Vi vill gärna höra från dig under försökets gång!',
        'fi': 'Kun idea on muotoiltu ja mahdollinen rahoitus kokeilulle on saatu, on aika siirtyä kokeilemaan. Kerro myös kuulumisia kokeilemisen matkalta.'
    },
    'stage-3-text': {
        'en': 'After your experiment, it’s useful to collect your thoughts and summarise what you learned, for yourself and for others. Share your lessons learned – there’s no need to reinvent the wheel!',
        'sv': 'Efter slutfört försök är det bra om du samlar dina tankar och sammanfattar för dig själv och andra vilka lärdomar försöket har gett. Dela med dig av lärdomarna för att undvika att uppfinna hjulet på nytt!',
        'fi': 'Kokeilun jälkeen on hyvä kerätä ajatukset sekä kiteyttää muille ja itselle, mitä kokeilussa on opittu. Jaa oppisi, jotta pyörää ei tarvitsisi keksiä uudelleen!'
    },
    'what-are-you-waiting': {
        'en': 'What are you waiting for?\nAct now!',
        'sv': 'Vad väntar du på?\nFrån ord till handling!',
        'fi': 'Mitä enää odotat?\nSanoista tekoihin'
    },
    'footer-paragraph': {
        'en': 'Kokeilun paikka brings together experimenters, financiers, new ideas and lessons learned. The service is provided by Motiva in cooperation with the Prime Minister’s Office. Join us!',
        'sv': 'Plats för försök för samman experimentlystna, finansiärer, nya idéer och lärdomar av försök. Motiva Oy tillhandahåller tjänsten i samarbete med statsrådets kansli. Välkommen med!',
        'fi': 'Kokeilun paikka kokoaa yhteen kokeilijat, kokeilujen rahoittajat, uudet ideat ja kokeilujen opit. Motiva toteuttaa palvelua yhteistyössä valtioneuvoston kanslian kanssa. Tervetuloa mukaan!'
    },
    'experiment-search-header': {
        'en': 'You can apply for funding and sparring for your experiments by participating in experiment searches.\nFollow our {{ newsletter }} and get information about new experiment searches as soon as they start.',
        'sv': 'Delta i våra ansökningsomgångar för att få finansiering och sparring för ditt försök.\nPrenumerera på vårt {{ nyhetsbrevför }} att genast få information om nya ansökningsomgångar.',
        'fi': 'Kokeiluhakuihin osallistumalla voit hakea kokeilullesi rahoitusta ja sparrausta.\nSeuraamalla {{ uutiskirjettämme }}, saat tiedon saman tien, kun uusia kokeiluhakuja käynnistyy.'
    }
}

def create_texts(apps, schema_editor):
    EditableText = apps.get_model('sitemap', 'EditableText')
    EditableText.__bases__ = (models.Model,)
    EditableTextTranslation = apps.get_model('sitemap', 'EditableTextTranslation')
    for text_type, values in DEFAULT_TEXTS.items():
        editable_text = EditableText(
            text_type=text_type
        )
        editable_text.save()
        for language, text_value in values.items():
            trans = EditableTextTranslation(
                master=editable_text,
                language_code=language,
                text_value=text_value
            )
            trans.save()

class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='EditableText',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('text_type', models.CharField(choices=[('front_page_header', 'Front page header'), ('front_page_ingress', 'Front page ingress'), ('stages-header', 'Stages header'), ('stage-1-header', 'Stage 1 header'), ('stage-2-header', 'Stage 2 header'), ('stage-3-header', 'Stage 3 header'), ('stage-1-text', 'Stage 1 text'), ('stage-2-text', 'Stage 2 text'), ('stage-3-text', 'Stage 3 text'), ('what-are-you-waiting', 'What are you waiting for text'), ('footer-paragraph', 'Footer paragraph')], max_length=100, unique=True, verbose_name='text type')),
            ],
            options={
                'abstract': False,
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='EditableTextTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('text_value', models.TextField(verbose_name='text value')),
                ('master', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='sitemap.EditableText')),
            ],
            options={
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.RunPython(create_texts, reverse_code=lambda x, y: None)
    ]
