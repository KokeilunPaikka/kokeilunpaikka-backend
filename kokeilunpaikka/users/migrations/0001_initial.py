# Generated by Django 2.2.5 on 2019-09-23 07:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import parler.fields
import parler.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('themes', '0001_initial'),
        ('uploads', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='UserLookingForOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'user looking for option',
                'verbose_name_plural': 'user looking for options',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserStatusOption',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
            ],
            options={
                'verbose_name': 'user status option',
                'verbose_name_plural': 'user status options',
            },
            bases=(parler.models.TranslatableModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='updated at')),
                ('description', models.TextField(blank=True, verbose_name='description')),
                ('expose_email_address', models.BooleanField(default=False, help_text='Controls whether the email address is returned by the API and displayed in the user profile.', verbose_name='expose email address')),
                ('language', models.CharField(choices=[('fi', 'fin'), ('sv', 'sve'), ('en', 'eng')], default='fi', max_length=2, verbose_name='language')),
                ('facebook_url', models.URLField(blank=True, verbose_name='Facebook account URL')),
                ('instagram_url', models.URLField(blank=True, verbose_name='Instagram account URL')),
                ('linkedin_url', models.URLField(blank=True, verbose_name='LinkedIn account URL')),
                ('twitter_url', models.URLField(blank=True, verbose_name='Twitter account URL')),
                ('image', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='uploads.Image', verbose_name='image')),
                ('interested_in_themes', models.ManyToManyField(blank=True, to='themes.Theme', verbose_name='interested in themes')),
                ('looking_for', models.ManyToManyField(blank=True, to='users.UserLookingForOption', verbose_name='looking for')),
                ('status', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='users.UserStatusOption', verbose_name='user status option')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'user profile',
                'verbose_name_plural': 'user profiles',
            },
        ),
        migrations.CreateModel(
            name='UserStatusOptionTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('value', models.CharField(help_text='An option user can select for his/her status. Like student etc.', max_length=255, verbose_name='value')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='users.UserStatusOption')),
            ],
            options={
                'verbose_name': 'user status option Translation',
                'db_table': 'users_userstatusoption_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='UserLookingForOptionTranslation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('language_code', models.CharField(db_index=True, max_length=15, verbose_name='Language')),
                ('value', models.CharField(help_text='An option user can select for things he or she is looking for in the service.', max_length=255, verbose_name='value')),
                ('master', parler.fields.TranslationsForeignKey(editable=False, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='translations', to='users.UserLookingForOption')),
            ],
            options={
                'verbose_name': 'user looking for option Translation',
                'db_table': 'users_userlookingforoption_translation',
                'db_tablespace': '',
                'managed': True,
                'default_permissions': (),
                'unique_together': {('language_code', 'master')},
            },
            bases=(parler.models.TranslatedFieldsModelMixin, models.Model),
        ),
    ]
